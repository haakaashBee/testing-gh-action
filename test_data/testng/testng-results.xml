<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="5" passed="5" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-08-26T06:23:23Z" name="Surefire suite" finished-at="2023-08-26T06:23:23Z" duration-ms="14">
    <groups>
    </groups>
    <test started-at="2023-08-26T06:23:23Z" name="Surefire test" finished-at="2023-08-26T06:23:23Z" duration-ms="14">
      <class name="com.qmetry.testng_demo.CalculatorTest">
        <test-method is-config="true" signature="beforeEachTest()[pri:0, instance:com.qmetry.testng_demo.CalculatorTest@76707e36]" started-at="2023-08-26T11:53:23Z" name="beforeEachTest" finished-at="2023-08-26T11:53:23Z" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method is-config="true" signature="initCalculator()[pri:0, instance:com.qmetry.testng_demo.CalculatorTest@76707e36]" started-at="2023-08-26T11:53:23Z" name="initCalculator" finished-at="2023-08-26T11:53:23Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initCalculator -->
        <test-method signature="testDivisionException()[pri:0, instance:com.qmetry.testng_demo.CalculatorTest@76707e36]" started-at="2023-08-26T11:53:23Z" name="testDivisionException" finished-at="2023-08-26T11:53:23Z" duration-ms="1" status="PASS">
          <exception class="java.lang.Exception">
            <message>
              <![CDATA[Divider can't be zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Exception: Divider can't be zero
	at com.qmetry.Calculator.divison(Calculator.java:23)
	at com.qmetry.testng_demo.CalculatorTest.testDivisionException(CalculatorTest.java:53)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeSingleClass(TestNGDirectoryTestSuite.java:112)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:383)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:344)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:417)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDivisionException -->
        <test-method signature="testDivison()[pri:0, instance:com.qmetry.testng_demo.CalculatorTest@76707e36]" started-at="2023-08-26T11:53:23Z" name="testDivison" finished-at="2023-08-26T11:53:23Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDivison -->
        <test-method signature="testEqual()[pri:0, instance:com.qmetry.testng_demo.CalculatorTest@76707e36]" started-at="2023-08-26T11:53:23Z" name="testEqual" finished-at="2023-08-26T11:53:23Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEqual -->
        <test-method signature="testSum()[pri:0, instance:com.qmetry.testng_demo.CalculatorTest@76707e36]" started-at="2023-08-26T11:53:23Z" name="testSum" finished-at="2023-08-26T11:53:23Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSum -->
        <test-method signature="testSubstraction()[pri:0, instance:com.qmetry.testng_demo.CalculatorTest@76707e36]" started-at="2023-08-26T11:53:23Z" name="testSubstraction" finished-at="2023-08-26T11:53:23Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubstraction -->
        <test-method is-config="true" signature="afterEachTest()[pri:0, instance:com.qmetry.testng_demo.CalculatorTest@76707e36]" started-at="2023-08-26T11:53:23Z" name="afterEachTest" finished-at="2023-08-26T11:53:23Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
      </class> <!-- com.qmetry.testng_demo.CalculatorTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>